swagger: "2.0"
info:
  description: |
    This is MyMusic API.
    Please get an Authorization Token and include it in authentication field before you make any requests.
  version: "1.0.0"
  title: MyMusic
  termsOfService: http://helloreverb.com/terms/
  contact:
    name: Spiros Kabasakalis
    email: kabasakalis@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: api.app.me:3000
basePath: /v1
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
  - application/vnd.siren+json
paths:
  /tracks:
    get:
      tags:
        - track
      summary: Finds all tracks
      description: Gets all tracks,paginated result.
      operationId: getAllTracks
      parameters:
        - in: query
          name: artist
          description: Filter by artist
          required: false
          type: string
        - in: query
          name: album
          description: Filter by album
          required: false
          type: string
        - in: query
          name: id
          description: Filter by ids
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      security:
       - json_token: []
      responses:
        "200":
          description: Successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Track"
        "404":
          description: Not Found
        "401":
          description: Unauthorized
        "500":
          description: Server Error
    post:
      tags:
        - track
      summary: Add a new track
      description: Only Admins and SuperAdmins can create tracks
      operationId: addTrack
      parameters:
        - in: body
          name: body
          description: Track to add.You can provide an album_id (list albums to find the id) to associate the track with an existing album. You can also create and associate an album for the new track,in which case you leave album_id blank
          required: false
          schema:
            $ref: "#/definitions/Track"
      security:
       - json_token: []
      responses:
        "405":
          description: Invalid input
        "401":
          description: Unauthorized

  /tracks/{trackId}:
    get:
      tags:
        - track
      summary: Find track by ID
      description: Returns an track
      operationId: getTrackById
      parameters:
        - in: path
          name: trackId
          description: ID of track that needs to be fetched
          required: true
          type: integer
          format: int64
      security:
       - json_token: []
      responses:
        "404":
          description: track not found
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Track"
        "400":
          description: Invalid ID supplied
    put:
      tags:
        - track
      summary: Updates a track
      description: ""
      operationId: updateTrack
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - in: path
          name: trackId
          description: ID of track to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated attributes for track.
          required: false
          schema:
            $ref: "#/definitions/Track"
      responses:
        "405":
          description: Invalid input
        "404":
          description: track not found
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Track"
        "400":
          description: Invalid ID supplied
      security:
        - json_token: []
    delete:
      tags:
        - track
      summary: Deletes a track
      description: ""
      operationId: deleteTrack
      parameters:
        - in: path
          name: trackId
          description: track id to delete
          required: true
          type: integer
          format: int64
      responses:
        "400":
          description: Invalid track value
        "204":
          description: No Content. Successfully Deleted.
        "404":
          description: Track not found
      security:
        - json_token: []
securityDefinitions:
  json_token:
    type: apiKey
    name: Authorization
    in: header
definitions:
  Auth:
    type: object
    properties:
      auth:
        type: object
        properties:
          email:
            type: string
          password:
            type: string
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      email:
        type: string
      password:
        type: string
      password_confirmation:
        type: string
      role:
        type: integer
        format: int32
  User:
    type: object
    properties:
      name:
        type: string
        description: username
      email:
        type: string
        description: email
      password:
        type: string
        description: password (at least 8 characters)
      password_confirmation:
        type: string
        description: password confirmation
      role:
        type: string
        enum: ['user','admin','superadmin']
      playlists_attributes:
        description: playlists that this track belongs to
        type: array
        items:
          $ref: "#/definitions/Playlist"

  Genre:
    type: object
    properties:
      title:
        type: string
        description: Name of new Genre to add.
  Artist:
    type: object
    properties:
      artist:
        type: object
        properties:
          genre_id:
            type: integer
            format: int64
          title:
            type: string
            example: Myrath
            description: Name of band or album.
          country:
            type: string
            example: USA
            description: artist's country of origin.
          genre_attributes:
            $ref: "#/definitions/Genre"
          albums_attributes:
            description: artist's albums
            type: array
            items:
              $ref: "#/definitions/AlbumNested"
  ArtistNested:
    type: object
    properties:
      genre_id:
        type: integer
        format: int64
      title:
        type: string
        example: Myrath
        description: Name of band or artist.
      country:
        type: string
        example: USA
        description: artist's country of origin.
      genre_attributes:
        $ref: "#/definitions/Genre"
  Album:
    type: object
    properties:
      album:
        type: object
        properties:
          artist_id:
            type: integer
            format: int64
          title:
            type: string
          year:
            type: integer
            format: int32
          tracks_attributes:
            description: Tracks on this album
            type: array
            items:
              $ref: "#/definitions/TrackNested"
  AlbumNested:
    type: object
    properties:
      title:
        type: string
      year:
        type: integer
        format: int32
  Track:
    type: object
    properties:
      track:
        type: object
        properties:
          title:
            type: string
          time:
            type: string
          album_id:
            type: integer
            format: int64
          album_attributes:
            description: album this track belongs to
            $ref: "#/definitions/AlbumNested"
  TrackNested:
    type: object
    properties:
      title:
        type: string
      time:
        type: string
  Playlist:
    type: object
    properties:
      playlist:
        type: object
        properties:
          title:
            type: string
          user_id:
            type: integer
            format: int64
          tracks_attributes:
            description: tracks in this playlist
            type: array
            items:
              $ref: "#/definitions/Track"
          albums_attributes:
            description: albums in this playlist
            type: array
            items:
              $ref: "#/definitions/Album"





