swagger: "2.0"
info:
  description: |
    This is MyMusic API.
    Please get an Authorization Token and include it in authentication field before you make any requests.
  version: "1.0.0"
  title: MyMusic
  termsOfService: http://helloreverb.com/terms/
  contact:
    name: Spiros Kabasakalis
    email: kabasakalis@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: api.app.me:3000
basePath: /v1
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
  - application/vnd.siren+json
paths:
  /auth:
    post:
      summary: Authenticate
      description: If you get 401 Unauthorized server response in some response you are either
                   unauthenticated or not authorized.In former case you have
                   to provide an authentication token in Security section  (Change Authentication).
                   You get a new token by executing this operation with valid credentials.
                   You will get a JSON Web Token (JWT) in return which you provide in Change Authentication field
                   in this format "Bearer [token]",for example Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE0NTUwOTgzNzksImF1ZCI6Ik15IE11c2ljIFVzZXJzIiwiaWQiOjEsImVtYWlsIjoia2FiYXNha2FsaXNAZ21haWwuY29tIn0.M4HHm_JU1xJUZozcpdtur7INqLVPVcWUlxLCcj-e95U
      operationId: getToken
      parameters:
        - in: body
          name: body
          description: Login to receive a token
          required: true
          schema:
            $ref: "#/definitions/Auth"
      responses:
        "200":
          description: Successful Token retrieval
        "401":
          description: Invalid credentials

  /artists:
    get:
      tags:
        - artist
      summary: Finds all Artists
      description: Gets all artists,paginated result.
      operationId: getAllArtists
      parameters:
        - in: query
          name: country
          description: Filter by Country
          required: false
          type: string
        - in: query
          name: genre
          description: Filter by Genre
          required: false
          type: string
        - in: query
          name: id
          description: Filter by ids
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      security:
       - json_token: []
      responses:
        "200":
          description: Successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Artist"
        "404":
          description: Not Found
        "401":
          description: Unauthorized
        "500":
          description: Server Error
    post:
      tags:
        - artist
      summary: Add a new Artist
      description: Only Admins and SuperAdmins can create Artists
      operationId: addArtist
      parameters:
        - in: body
          name: body
          description: Artist to add.You can either provide a genre_id (list Genres to find the id) to associate
                       the artist with an existing Genre or provide the title of a new Genre,(in which case you leave
                       genre_id blank).You can also create and associate albums for the new Artist.
          required: false
          schema:
            $ref: "#/definitions/Artist"
      security:
       - json_token: []
      responses:
        "405":
          description: Invalid input
        "401":
          description: Unauthorized

  /artists/{artistId}:
    get:
      tags:
        - artist
      summary: Find artist by ID
      description: Returns an artist
      operationId: getArtistById
      parameters:
        - in: path
          name: artistId
          description: ID of artist that needs to be fetched
          required: true
          type: integer
          format: int64
      responses:
        "404":
          description: Artist not found
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Artist"
        "400":
          description: Invalid ID supplied
    put:
      tags:
        - artist
      summary: Updates an Artist
      description: ""
      operationId: updateArtist
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: artistId
          description: ID of Artist to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Artist to update
          required: false
          schema:
            $ref: "#/definitions/Artist"
      responses:
        "405":
          description: Invalid input
        "404":
          description: Artist not found
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/Artist"
        "400":
          description: Invalid ID supplied
      security:
        - json_token: []
    delete:
      tags:
        - artist
      summary: Deletes an Artist
      description: ""
      operationId: deleteArtist
      parameters:
        - in: path
          name: artistId
          description: Artist id to delete
          required: true
          type: integer
          format: int64
      responses:
        "400":
          description: Invalid artist value
        "204":
          description: No Content. Successfully Deleted.
      security:
        - json_token: []
securityDefinitions:
  json_token:
    type: apiKey
    name: Authorization
    in: header
definitions:
  Auth:
    type: object
    properties:
      auth:
        type: object
        properties:
          email:
            type: string
          password:
            type: string
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      email:
        type: string
      password:
        type: string
      password_confirmation:
        type: string
      role:
        type: integer
        format: int32
  Genre:
    type: object
    properties:
      title:
        type: string
        description: Name of new Genre to add.
  Artist:
    type: object
    properties:
      artist:
        type: object
        properties:
          genre_id:
            type: integer
            format: int64
          title:
            type: string
            example: Myrath
            description: Name of band or Artist.
          country:
            type: string
            example: USA
            description: Artist's country of origin.
          genre_attributes:
            $ref: "#/definitions/Genre"
          albums_attributes:
            description: Artist's albums
            type: array
            items:
              $ref: "#/definitions/AlbumNested"
  Album:
    type: object
    properties:
      album:
        type: object
        properties:
          id:
            type: integer
            format: int64
          artist_id:
            type: integer
            format: int64
          title:
            type: string
          year:
            type: integer
            format: int32
  AlbumNested:
    type: object
    properties:
      title:
        type: string
      year:
        type: integer
        format: int32


